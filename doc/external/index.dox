/**
\mainpage WHT Manual

\attention This package and manual are still in development.  A prerelease can
be downloaded from:
  \par
  http://www.cs.drexel.edu/~ma53/src/spiral_wht-2.0-pre-4.tar.gz

\section _overview Overview

The WHT Package is meant to serve as a readable reference model for
understanding performance on a wide variety of architectures.  At it's core the
package
implements a recursive factorization of the Walsh-Hadamard Transform-- a
linear transform closely related to the Fast Fourier Transform.  

The package follows the Adaptive Generate and Test paradigm of High Performance
Computing which can be summarized as:
- Allow the factoring of an algorithm so that it may exploit common architecture
  features, e.g. the memory hierarchy, instruction parallelism.
- Also, allow architecture specific optimizations which are critical for good
  performance.
- For a given input class of an algorithm, generate many algorithms and test to
  see which one is optimal.
- Since this typically introduces an exponential search space 
  apply heuristics when possible to minimize the time searching.

The package aims to be
an ideal candidate for exploring and understanding new architectures and
computing paradigms.

Interesting computing paradigms supported in the package are:
- SIMD 
- openMP !
- MPI !
- IBM Cell !
- NVIDIA Cuda !

 ! - \b In \b Development

\section _background Background
  This package has been created as part of the SPIRAL project:

  \par
    http://www.spiral.net

  The SPIRAL project pursues the goal of automating the implementation, 
  optimization, and platform adaptation of digital signal
  processing (DSP) algorithms.   

  The original design of this package was based on an FFT package 
  by Sebastian Egner:

  \par
   http://avalon.ira.uka.de/home/egner

  The latest version incorporates a more modular design based on the FFTW package
  by Matteo Frigo, and Steven G. Johnson:

  \par
    http://www.fftw.org

  It is possible to use native hardware performance counters using 
  the PAPI library:

  \par
    http://icl.cs.utk.edu/papi


\section _install Installation
  See the \ref install file which is also distributed in the package.

\section _quickstart Quickstart

  After configuring and installing the package.  Try searching for the optimal
  algorithm on your architecture using Dynamic Programing:
  \code
  INSTALL_DIR/bin/wht_dp -m 'INSTALL_DIR/bin/wht_measure -k 10000 -n 50' -a 1 -b 6
  INSTALL_DIR/bin/wht_dp -m 'INSTALL_DIR/bin/wht_measure -k 100 -n 50' -a 7 -b 12
  \endcode

  This will store the best plans in:
  \code
  INSTALL_DIR/data/wht_best_plans.txt
  \endcode

\section _utilities Utilities

- \ref wht_measure
- \ref wht_rand
- \ref wht_verify
- \ref wht_classify
- \ref wht_attach

\section _developers Developers
There are several ways to contribute to the development of the package.

- \ref rule_extension
- \ref codelet_extension
- \ref measure_extension
- \ref maintenance


 */
