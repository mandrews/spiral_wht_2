#!/usr/bin/env ruby

# update_best_trees
#
# Author: Michael Andrews <mjand@drexel.edu>
# $Id$

$LOAD_PATH << "#{File.dirname(__FILE__)}"

require "utils"

def update_plan(plan)
  new_plan = plan.dup
  new_plan.gsub!(/\s*/,'')
  new_plan.gsub!(/smallil(\d+)/) { |x| "smallil(#{2 **$1.to_i})" }

  if new_plan =~ /smallil/
    new_plan.gsub!(/split/,'splitil')
  end

  new_plan
end

def usage(msg = nil)
  puts "update_best_trees: OLD_BEST_TREES "
  puts msg unless msg.nil?
  exit
end

if $0 == __FILE__ # Main Entry Point
  usage if ARGV.length < 1

  old_best = ARGV[0]
  new_best = "#{old_best}.new"

  unless File.exists?(old_best)
    usage("Could find old besttrees #{old_best}")
  end

  plans = load_data(new_best, [])

  File.open(old_best).each_line do |line|
    line.chomp!
    next if line =~ /^#/ or line.empty?
    size, plan, usec = line.split(/\s*!\s*/)
    size = size.to_i

    new_plan = update_plan(plan)
    time = wht_measure(new_plan, '-e PAPI -m TOT_CYC -k 100 -n 10 -a 0.5 -p 0.1')[0]

    plans[size] = {}
    plans[size]['id'] = size
    plans[size]['plan'] = new_plan
    plans[size]['time'] = time
    puts "#{size} #{new_plan} #{time}"
  end

  plans.shift # Remove 0 element

  save_data(new_best, plans)
end

