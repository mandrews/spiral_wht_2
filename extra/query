#!/usr/bin/env ruby

# query
#
# Author: Michael Andrews <mjand@drexel.edu>
# $Id$

# TODO matlab or CSV style 

require 'utils'

def die
  puts "query: FILE MODE [WHERE] [SELECT]"
  exit 1
end

if __FILE__ == $0
  die if ARGV.size < 2

  data    = ARGV[0]
  mode    = ARGV[1]
  where   = ARGV[2]
  selects = (ARGV[3] || "").split(/\s*,\s*/)

  re = where.nil? ? nil : Regexp.new('^\d+\s*:\s*.*?:\s*' + where + '$')

  env = load_runtime_env
  info, plans = load_data(data, env)

  enum = {
    'right'     => 1,
    'left'      => 2,
    'balanced'  => 3,
    'mixed'     => 4
  }

  case mode
    when 'SELECT'
      # Place header
      hostname = `hostname`
      puts "% HOSTNAME #{hostname}"
      env.each { |key,value| puts "% #{key} #{value}" }
      puts "% WHERE  : #{where}"
      puts "% SELECT : " + selects.join(', ')

      out = {}

      plans.each do |key, node|
        next unless re.nil? or key =~ re

        oid = node['oid'].to_i
        row = Array.new(selects.size)

        node.each do |key,value|
          i = selects.index(key)
          next if i.nil?
          unless enum[value].nil?
            row[i] = enum[value]
          else
            row[i] = value
          end
        end

        out[oid] = row

      end

      out.sort.each do |oid, value|
        puts value.join(' ') unless value.empty?
      end
    when 'DELETE'
      plans.each do |key, node|
        next unless re.nil? or key =~ re
        plans.delete(key)
      end
      save_data(data, env, plans, info)
  end

end
